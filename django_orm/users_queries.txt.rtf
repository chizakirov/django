{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 \CocoaLigature0 1/Create models (class Users) in the models.py with all the fields (attribute) for the table\
\
2/ Create the database & table:\
  > python manage.py makemigrations\
  > python manage.py migrate\
\
3/Open Shell & import all models\
> python manage.py shell\
>>> from apps.app_name.models import *\
\
4/Create users:\
>>first = Users.objects.create(first_name = "Chi",last_name = "Zakirov", email = "chi@ee.com", age = 10)\
>>second = Users.objects.create(first_name = "Danil", last_name = "Ka", email_address = "danil@ee.com", age = 15)\
>>third = Users.objects.create(first_name = "Lan", last_name = "Doan", email_address = "lan@ee.com", age = 20)\
\
5/ Retrieve users:\
>>all = Users.objects.all() //<QuerySet [<Users: Users object>, <Users: Users object>, <Users: Users object>]>\
\
>>all = Users.objects.all().values() //remember to use .values()\
//<QuerySet [\{'id': 1, 'first_name': 'Chi', 'last_name': 'Zakirov', 'email_address': 'chi@ee.com', 'age': 10, 'created_at': datetime.datetime(2018, 12, 10, 18, 48, 24, 197975, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 12, 10, 18, 48, 24, 198418, tzinfo=<UTC>)\}, \{'id': 2, 'first_name': 'Danil', 'last_name': 'Ka', 'email_address': 'danil@ee.com', 'age': 15, 'created_at': datetime.datetime(2018, 12, 10, 18, 51, 24, 412736, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 12, 10, 18, 51, 24, 412861, tzinfo=<UTC>)\}, \{'id': 3, 'first_name': 'Lan', 'last_name': 'Doan', 'email_address': 'lan@ee.com', 'age': 20, 'created_at': datetime.datetime(2018, 12, 10, 18, 52, 20, 980750, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 12, 10, 18, 52, 20, 980826, tzinfo=<UTC>)\}]>\
\
6/ Retrieve first user:\
>>first = Users.objects.first() //different from retrieve all, because all is a list of many objects, need to specify .values(). First is one object and no need to specify the value\
>> first\
<Users: Users object>\
>>first.__dict__ //\{'_state': <django.db.models.base.ModelState object at 0x10bb626d8>, 'id': 1, 'first_name': 'Chi', 'last_name': 'Zakirov', 'email_address': 'chi@ee.com', 'age': 10, 'created_at': datetime.datetime(2018, 12, 10, 18, 48, 24, 197975, tzinfo=<UTC>), 'updated_at': datetime.datetime(2018, 12, 10, 18, 48, 24, 198418, tzinfo=<UTC>)\}\
\
7/ Retrieve last user:\
>>last = Users.objects.last()\
>> last.__dict__\
\
8/Update last_name of user id =3 to \'93Pancakes\'94:\
>>> update_third = Users.objects.get(id = 3)\
>>> update_third //need this so CLI knows this instance is currently being referred to\
<Users: Users object>\
>>> update_third.last_name = "Pancakes"\
>>> update_third.save()\
>>> update_third.__dict__\
\
9/ Delete user id = 2:\
>>> delete_user = Users.objects.get(id = 2)\
>>> delete_user\
<Users: Users object>\
>>> delete_user.delete()\
(1, \{'users_app.Users': 1\})\
\
10/ Order all users by first_name:\
>>Users.objects.all().values().order_by("first_name")\
\
11/Sort all users by first_name in Descending order:\
>>Users.objects.all().values().order_by("-first_name")}